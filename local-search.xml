<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>安卓逆向这档事-第三节.初识smali，vip终结者</title>
    <link href="/2023/11/13/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/"/>
    <url>/2023/11/13/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/</url>
    
    <content type="html"><![CDATA[<h1 id="一、基础知识介绍"><a href="#一、基础知识介绍" class="headerlink" title="一、基础知识介绍"></a>一、基础知识介绍</h1><h2 id="1-什么是JVM、Dalvik、ART"><a href="#1-什么是JVM、Dalvik、ART" class="headerlink" title="1.什么是JVM、Dalvik、ART"></a>1.什么是JVM、Dalvik、ART</h2><p>JVM是JAVA虚拟机，运行JAVA字节码程序<br>Dalvik是Google专门为Android设计的一个虚拟机，Dalvik有专属的文件执行格式dex(Dalvik executable)<br>Art(Android Runtime)相当于Dalvik的升级版，本质与Dalvik无异</p><h2 id="2-smali及其语法"><a href="#2-smali及其语法" class="headerlink" title="2.smali及其语法"></a>2.smali及其语法</h2><p>smali是Dalvik的寄存器语言，smali代码是dex反编译而来的。</p><p>关键字</p><table><thead><tr><th>名称</th><th>注释</th></tr></thead><tbody><tr><td>.class</td><td>类名</td></tr><tr><td>.super</td><td>父类名，继承的上级类名名称</td></tr><tr><td>.source</td><td>源名</td></tr><tr><td>.field</td><td>变量</td></tr><tr><td>.method</td><td>方法名</td></tr><tr><td>.register</td><td>寄存器</td></tr><tr><td>.end method</td><td>方法名的结束</td></tr><tr><td>public</td><td>公有</td></tr><tr><td>protected</td><td>半公开，只有同一家人才能用</td></tr><tr><td>private</td><td>私有，只能自己使用</td></tr><tr><td>.parameter</td><td>方法参数</td></tr><tr><td>.prologue</td><td>方法开始</td></tr><tr><td>.line xxx</td><td>位于第xxx行</td></tr></tbody></table><p>数据类型对应</p><table><thead><tr><th>smali类型</th><th>java类型</th><th>注释</th></tr></thead><tbody><tr><td>V</td><td>void</td><td>无返回值</td></tr><tr><td>Z</td><td>boolean</td><td>布尔值类型，返回0或1</td></tr><tr><td>B</td><td>byte</td><td>字节类型，返回字节</td></tr><tr><td>S</td><td>short</td><td>短整数类型，返回数字</td></tr><tr><td>C</td><td>char</td><td>字符类型，返回字符</td></tr><tr><td>I</td><td>int</td><td>整数类型，返回数字</td></tr><tr><td>J</td><td>long （64位 需要2个寄存器存储）</td><td>长整数类型，返回数字</td></tr><tr><td>F</td><td>float</td><td>单浮点类型，返回数字</td></tr><tr><td>D</td><td>double （64位 需要2个寄存器存储）</td><td>双浮点类型，返回数字</td></tr><tr><td>string</td><td>String</td><td>文本类型，返回字符串</td></tr><tr><td>Lxxx&#x2F;xxx&#x2F;xxx</td><td>object</td><td>对象类型，返回对象</td></tr></tbody></table><p>常用指令</p><table><thead><tr><th>关键字</th><th>注释</th></tr></thead><tbody><tr><td>const</td><td>重写整数属性，真假属性内容，只能是数字类型</td></tr><tr><td>const-string</td><td>重写字符串内容</td></tr><tr><td>const-wide</td><td>重写长整数类型，多用于修改到期时间。</td></tr><tr><td>return</td><td>返回指令</td></tr><tr><td>if-eq</td><td>全称equal(a&#x3D;b)，比较寄存器ab内容，相同则跳</td></tr><tr><td>if-ne</td><td>全称not equal(a!&#x3D;b)，ab内容不相同则跳</td></tr><tr><td>if-eqz</td><td>全称equal zero(a&#x3D;0)，z即是0的标记，a等于0则跳</td></tr><tr><td>if-nez</td><td>全称not equal zero(a!&#x3D;0)，a不等于0则跳</td></tr><tr><td>if-ge</td><td>全称greater equal(a&gt;&#x3D;b)，a大于或等于则跳</td></tr><tr><td>if-le</td><td>全称little equal(a&lt;&#x3D;b)，a小于或等于则跳</td></tr><tr><td>goto</td><td>强制跳到指定位置</td></tr><tr><td>switch</td><td>分支跳转，一般会有多个分支线，并根据指令跳转到适当位置</td></tr><tr><td>iget</td><td>获取寄存器数据</td></tr></tbody></table><p>其余指令可用语法工具查询</p><h1 id="二、快速定位、修改判断、强制跳转、修改寄存器的值"><a href="#二、快速定位、修改判断、强制跳转、修改寄存器的值" class="headerlink" title="二、快速定位、修改判断、强制跳转、修改寄存器的值"></a>二、快速定位、修改判断、强制跳转、修改寄存器的值</h1><p>定位方法功能：搜索弹窗关键字、抓取按钮id<br>修改方法：修改判断、强制跳转、修改寄存器的值<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image.png" alt="Alt text"></p><h2 id="1、快速定位"><a href="#1、快速定位" class="headerlink" title="1、快速定位"></a>1、快速定位</h2><p>查看关键值<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-1.png" alt="Alt text"></p><h3 id="1-1、搜索弹窗关键字"><a href="#1-1、搜索弹窗关键字" class="headerlink" title="1.1、搜索弹窗关键字"></a>1.1、搜索弹窗关键字</h3><h4 id="1-1-1、使用jadx-gui逆向分析搜索快速定位"><a href="#1-1-1、使用jadx-gui逆向分析搜索快速定位" class="headerlink" title="1.1.1、使用jadx-gui逆向分析搜索快速定位"></a>1.1.1、使用jadx-gui逆向分析搜索快速定位</h4><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-2.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-3.png" alt="Alt text"></p><h4 id="1-1-2、使用MT管理器逆向分析搜索快速定位"><a href="#1-1-2、使用MT管理器逆向分析搜索快速定位" class="headerlink" title="1.1.2、使用MT管理器逆向分析搜索快速定位"></a>1.1.2、使用MT管理器逆向分析搜索快速定位</h4><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-4.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-5.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-6.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-7.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-8.png" alt="Alt text"></p><h3 id="1-2、抓取按钮id"><a href="#1-2、抓取按钮id" class="headerlink" title="1.2、抓取按钮id"></a>1.2、抓取按钮id</h3><p>使用开发者助手工具，进入到此关卡界面，进行界面资源分析</p><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-9.png" alt="Alt text"></p><p>复制</p><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-10.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-11.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-12.png" alt="Alt text"></p><p>往上翻一翻</p><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-13.png" alt="Alt text"></p><h2 id="2、修改判断、强制跳转、修改寄存器的值"><a href="#2、修改判断、强制跳转、修改寄存器的值" class="headerlink" title="2、修改判断、强制跳转、修改寄存器的值"></a>2、修改判断、强制跳转、修改寄存器的值</h2><p>使用jadx-gui逆向Java代码中的分析<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/%E9%80%86%E5%90%91Android%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="Alt text"><br>但是MT管理器或者其他一些可反编译dex的工具都转换成了smali代码<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-14.png" alt="Alt text"><br>一下是对jadx-gui工具反编译dex之后的注注释</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs smali">//一个私有、静态、不可变的方法   方法名<br><span class="hljs-keyword">.method</span><span class="hljs-keyword"> private</span><span class="hljs-keyword"> static</span><span class="hljs-keyword"> final</span> onCreate$lambda-2(<span class="hljs-class">Lkotlin/jvm/internal/Ref$IntRef;</span><span class="hljs-class">Lcom/zj/wuaipojie/ui/ChallengeSecond;</span><span class="hljs-class">Landroid/widget/ImageView;</span><span class="hljs-class">Landroid/widget/ImageView;</span><span class="hljs-class">Landroid/widget/ImageView;</span><span class="hljs-class">Landroid/view/View;</span>)Z<br><span class="hljs-keyword">    .registers</span> 7    // 寄存器的数量<br><br><span class="hljs-keyword">    .line</span> 33    // 代码所在行数<br>   <span class="hljs-built_in"> iget </span>   v1, v1, <span class="hljs-class">Lkotlin/jvm/internal/Ref$IntRef;</span>-&gt;element:I <span class="hljs-comment"># field@97ee    // 读取v1（第一个参数）中element的值赋值给v1（第二个参数）</span><br><br>   <span class="hljs-built_in"> const/4 </span>    v6, 0x1 // v6赋值1<br><br>   <span class="hljs-built_in"> const/16 </span>   v0, 0xa // v0赋值10，在16进制里a表示10<br><br>   <span class="hljs-built_in"> if-ge </span>  v1, v0,<span class="hljs-keyword"> :cond_0015</span>  // 判断v1的值是否大于或等于 v0的值（即v1的值是否大于等于10），如果大于或等于则跳转到:cond_0015<br><br><span class="hljs-keyword">    .line</span> 34    // 以下是常见的Toast弹窗代码<br><br>   <span class="hljs-built_in"> move-object </span>v1, v2  // 自动对象引用v1到v2<br><br>   <span class="hljs-built_in"> check-cast </span> v1, <span class="hljs-class">Landroid/content/Context;</span> <span class="hljs-comment"># type@0063   // 检查Contex对象引用</span><br><br>   <span class="hljs-built_in"> const-string </span>   v0, <span class="hljs-string">&quot;请先获取10个硬币哦&quot;</span> <span class="hljs-comment"># string@ed09  // 弹窗文本信息，把&quot;&quot;里的字符串数据赋值给v0</span><br><br>   <span class="hljs-built_in"> check-cast </span> v0, <span class="hljs-class">Ljava/lang/CharSequence;</span> <span class="hljs-comment"># type@14e5    // 检查CharSequence对象引用</span><br><br>   <span class="hljs-built_in"> invoke-static </span>      &#123;v1, v0, v6&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;makeText(<span class="hljs-class">Landroid/content/Context;</span>, <span class="hljs-class">Ljava/lang/CharSequence;</span>, I)<span class="hljs-class">Landroid/widget/Toast;</span> <span class="hljs-comment"># method@11ae  </span><br>    // 将弹窗文本、显示时间等信息传给v1<br><br>   <span class="hljs-built_in"> move-result-object </span> v1  // 结果传递给v1<br><br>   <span class="hljs-built_in"> invoke-virtual </span> &#123;v1&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;show()V <span class="hljs-comment"># method@11af    // 当看到这个Toast;-&gt;show()你就应该反应过来这里是弹窗代码</span><br><br><span class="hljs-keyword">     .line</span> 36<br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v2&#125;, <span class="hljs-class">Lcom/zj/wuaipojie/ui/ChallengeSecond;</span>-&gt;isvip()Z <span class="hljs-comment"># method@9cc3 //判断isvip方法的返回值是否为真(即结果是否为1)</span><br><br>   <span class="hljs-built_in"> move-result </span>        v1  //结果赋值给v1<br><br>   <span class="hljs-built_in"> if-eqz </span>             v1,<span class="hljs-keyword"> :cond_0043</span>  //如果结果为0则跳转cond_0043地址<br><br><span class="hljs-keyword">    .line</span> 37<br><br>   <span class="hljs-built_in"> check-cast </span>         v2, <span class="hljs-class">Landroid/content/Context;</span> <span class="hljs-comment"># type@0063</span><br><br>   <span class="hljs-built_in"> const-string </span>       v1, <span class="hljs-string">&quot;当前已经是大会员了哦！&quot;</span> <span class="hljs-comment"># string@ed00</span><br><br>   <span class="hljs-built_in"> check-cast </span>         v1, <span class="hljs-class">Ljava/lang/CharSequence;</span> <span class="hljs-comment"># type@14e5</span><br><br>   <span class="hljs-built_in"> invoke-static </span>      &#123;v2, v1, v6&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;makeText(<span class="hljs-class">Landroid/content/Context;</span>, <span class="hljs-class">Ljava/lang/CharSequence;</span>, I)<span class="hljs-class">Landroid/widget/Toast;</span> <span class="hljs-comment"># method@11ae</span><br><br>   <span class="hljs-built_in"> move-result-object </span> v1<br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v1&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;show()V <span class="hljs-comment"># method@11af</span><br><br>   <span class="hljs-built_in"> const </span>              v1, 0x7f0d0018  //在arsc中的id索引，这个值可以进行查询<br><br><span class="hljs-keyword">    .line</span> 38<br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v3, v1&#125;, <span class="hljs-class">Landroid/widget/ImageView;</span>-&gt;setImageResource(I)V <span class="hljs-comment"># method@0fe1    //设置图片资源</span><br><br>   <span class="hljs-built_in"> const </span>              v1, 0x7f0d0008<br><br><span class="hljs-keyword">    .line</span> 39<br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v3, v1&#125;, <span class="hljs-class">Landroid/widget/ImageView;</span>-&gt;setImageResource(I)V <span class="hljs-comment"># method@0fe1</span><br><br>   <span class="hljs-built_in"> const </span>              v1, 0x7f0d0008<br><br><span class="hljs-keyword">    .line</span> 40<br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v5, v1&#125;, <span class="hljs-class">Landroid/widget/ImageView;</span>-&gt;setImageResource(I)V <span class="hljs-comment"># method@0fe1</span><br><br><span class="hljs-keyword">    .line</span> 41<br><br>   <span class="hljs-built_in"> sget-object </span>        v1, <span class="hljs-class">Lcom/zj/wuaipojie/util/SPUtils;</span>-&gt;INSTANCE:<span class="hljs-class">Lcom/zj/wuaipojie/util/SPUtils;</span> <span class="hljs-comment"># field@957d</span><br><br>   <span class="hljs-built_in"> const/4 </span>            v3, 0x2 //v3赋值2<br><br>   <span class="hljs-built_in"> const-string </span>       v4, <span class="hljs-string">&quot;level&quot;</span> <span class="hljs-comment"># string@b13d      //sp的索引</span><br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v1, v2, v4, v3&#125;, <span class="hljs-class">Lcom/zj/wuaipojie/util/SPUtils;</span>-&gt;saveInt(<span class="hljs-class">Landroid/content/Context;</span>, <span class="hljs-class">Ljava/lang/String;</span>, I)V <span class="hljs-comment"># method@9d49 //写入数据</span><br><br>   <span class="hljs-built_in"> goto </span>              <span class="hljs-keyword"> :goto_0050</span>  //跳转地址<br><br><span class="hljs-keyword">    .line</span> 44<br><br>   <span class="hljs-built_in"> check-cast </span>         v2, <span class="hljs-class">Landroid/content/Context;</span> <span class="hljs-comment"># type@0063</span><br><br>   <span class="hljs-built_in"> const-string </span>       v1, <span class="hljs-string">&quot;请先充值大会员哦！&quot;</span> <span class="hljs-comment"># string@ed07</span><br><br>   <span class="hljs-built_in"> check-cast </span>         v1, <span class="hljs-class">Ljava/lang/CharSequence;</span> <span class="hljs-comment"># type@14e5</span><br><br>   <span class="hljs-built_in"> invoke-static </span>      &#123;v2, v1, v6&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;makeText(<span class="hljs-class">Landroid/content/Context;</span>, <span class="hljs-class">Ljava/lang/CharSequence;</span>, I)<span class="hljs-class">Landroid/widget/Toast;</span> <span class="hljs-comment"># method@11ae</span><br><br>   <span class="hljs-built_in"> move-result-object </span> v1<br><br>   <span class="hljs-built_in"> invoke-virtual </span>     &#123;v1&#125;, <span class="hljs-class">Landroid/widget/Toast;</span>-&gt;show()V <span class="hljs-comment"># method@11af</span><br><br>   <span class="hljs-built_in"> return </span>             v6  //返回V6的值<span class="hljs-keyword"></span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword">.end method</span> //方法结束<br><br>//判断是否是大会员的方法<br><span class="hljs-keyword">.method</span><span class="hljs-keyword"> public</span><span class="hljs-keyword"> final</span> isvip()Z<br><br><span class="hljs-keyword">    .registers</span> 2<br><br>       <span class="hljs-built_in"> const/4 </span>            v0, 0   //v0赋值0，0就是false<br><br>       <span class="hljs-built_in"> return </span>             v0  //返回v0的值<span class="hljs-keyword"></span><br><span class="hljs-keyword"></span><br><span class="hljs-keyword">.end method</span><br></code></pre></td></tr></table></figure><h2 id="2-1、修改判断"><a href="#2-1、修改判断" class="headerlink" title="2.1、修改判断"></a>2.1、修改判断</h2><p>这里的 </p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">const/16 v0, 0xa <span class="hljs-built_in"></span><br><span class="hljs-built_in">if-ge </span>p0, v0,<span class="hljs-keyword"> :cond_15</span><br></code></pre></td></tr></table></figure><p>意思是v0的值为10<br>p0大于等于v0（10）则跳转（p0是硬币数量）<br>改成 if-le<br>p0小于于等于v0（10）则跳转（p0是硬币数量）<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-15.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-16.png" alt="Alt text"><br>注释掉判断是否为大会员（默认为false），不让它判断跳转，直接执行后面是大会员的代码<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-17.png" alt="Alt text"><br>最终效果<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-18.png" alt="Alt text"></p><h2 id="2-2、强制跳转"><a href="#2-2、强制跳转" class="headerlink" title="2.2、强制跳转"></a>2.2、强制跳转</h2><p>goto 强制跳转到制定位置<br>在判断硬币数量之前插入强制跳转，跳转到判断是否是大会员之后，直接执行成为大会员之后的代码<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-19.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-20.png" alt="Alt text"><br>最终效果<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-21.png" alt="Alt text"></p><h2 id="2-3、修改寄存器的值"><a href="#2-3、修改寄存器的值" class="headerlink" title="2.3、修改寄存器的值"></a>2.3、修改寄存器的值</h2><p>这里是判断硬币的数量，和被比较的值，v0值为10，修改成0，0x0<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-22.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-23.png" alt="Alt text"><br>判断是否是大会员的方法，默认为0就是false，改成1让它为true<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-24.png" alt="Alt text"><br>最终效果<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-25.png" alt="Alt text"></p><h1 id="三、课后小作业"><a href="#三、课后小作业" class="headerlink" title="三、课后小作业"></a>三、课后小作业</h1><p>丑小鸭师傅的demo<br>链接：<a href="https://pan.baidu.com/s/1cUInoi">https://pan.baidu.com/s/1cUInoi</a> 密码：07p9<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-26.png" alt="Alt text"><br>定位关键词：登录失败</p><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-27.png" alt="Alt text"><br>使用jadx-gui逆向分析可以直接看到账密（hfdcxy&#x2F;1234）<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-28.png" alt="Alt text"><br>smali代码分析<br>判断输入的用户名是是否和v0的值相等，如果相等就进入密码的判断，如果密码判断成功就进入登录成功的代码里<br>如果有一个不相等就跳入cond_1b登录失败</p><p><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-29.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-30.png" alt="Alt text"><br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-31.png" alt="Alt text"></p><p>直接在第一次判断之前加入跳转，跳转到if-eqz v0, :cond_1b判断账密是否正确之后的代码里<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-32.png" alt="Alt text"><br>最终效果<br><img src="/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%B8%89%E8%8A%82-%E5%88%9D%E8%AF%86smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85/image-33.png" alt="Alt text"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改</title>
    <link href="/2023/11/10/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%BA%8C%E8%AF%BE%E3%80%81%E5%88%9D%E5%A7%8BAPK%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E3%80%81%E5%8F%8C%E5%BC%80%E3%80%81%E6%B1%89%E5%8C%96%E3%80%81%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9/"/>
    <url>/2023/11/10/%E5%AE%89%E5%8D%93%E9%80%86%E5%90%91%E8%BF%99%E6%A1%A3%E4%BA%8B-%E7%AC%AC%E4%BA%8C%E8%AF%BE%E3%80%81%E5%88%9D%E5%A7%8BAPK%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E3%80%81%E5%8F%8C%E5%BC%80%E3%80%81%E6%B1%89%E5%8C%96%E3%80%81%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="1、APK结构"><a href="#1、APK结构" class="headerlink" title="1、APK结构"></a>1、APK结构</h1><p>apk 全称 Android Package，它相当于一个压缩文件，只要在电脑上将apk后缀改为zip即可解压。</p><table><thead><tr><th>文件</th><th>注释</th></tr></thead><tbody><tr><td>assets目录</td><td>存放APK的静态资源文件，比如视频，音频，图片等</td></tr><tr><td>lib 目录</td><td>armeabi-v7a基本通用所有android设备，arm64-v8a只适用于64位的android设备，x86常见用于android模拟器，其目录下的.so文件是c或c++编译的动态链接库文件</td></tr><tr><td>META_INF目录</td><td>保存应用的签名信息，签名信息可以验证APK文件的完整性，相当于APK的身份证(验证文件是否又被修改)</td></tr><tr><td>res目录</td><td>res目录存放资源文件，包括图片，字符串等等，APK的脸蛋由他的layout文件设计<br/>layout 文件夹用来存放布局文件，布局文件用来描述应用程序的界面结构。<br/>values 文件夹用来存放值资源文件，值资源文件用来存放应用程序中使用的常量值和颜色信息。</td></tr><tr><td>AndroidMainfest.xml文件</td><td>APK的应用清单信息，它描述了应用的名字，版本，权限，引用的库文件等等信息</td></tr><tr><td>classes.dex文件</td><td>classes.dex是java源码编译后生成的java字节码文件，APK运行的主要逻辑</td></tr><tr><td>resources.arsc文件</td><td>resources.arsc是编译后的二进制资源文件，它是一个映射表，映射着资源和id，通过R文件中的id就可以找到对应的资源</td></tr></tbody></table><h1 id="2、双开及原理"><a href="#2、双开及原理" class="headerlink" title="2、双开及原理"></a>2、双开及原理</h1><p>双开：简单来说，就是手机同时运行两个或多个相同的应用，例如同时运行两个微信等</p><table><thead><tr><th>原理</th><th>解释</th></tr></thead><tbody><tr><td>修改包名</td><td>让手机系统认为这是2个APP，这样的话就能生成2个数据存储路径，此时的多开就等于你打开了两个互不干扰的APP</td></tr><tr><td>修改Framework</td><td>对于有系统修改权限的厂商，可以修改Framework来实现双开的目的，例如：小米自带的应用多开</td></tr><tr><td>通过虚拟化技术实现</td><td>虚拟Framework层、虚拟文件系统、模拟Android对组件的管理、虚拟应用进程管理 等一整套虚拟技术，将APK复制一份到虚拟空间中运行，例如：平行空间</td></tr><tr><td>以插件机制运行</td><td>利用反射替换，动态代{过}{滤}理，hook了系统的大部分与system—server进程通讯的函数，以此作为“欺上瞒下”的目的，欺骗系统“以为”只有一个apk在运行，瞒过插件让其“认为”自己已经安装。例如：VirtualApp</td></tr></tbody></table><h2 id="2-1、修改包名实现双开"><a href="#2-1、修改包名实现双开" class="headerlink" title="2.1、修改包名实现双开"></a>2.1、修改包名实现双开</h2><h3 id="2-1-1-使用NP管理器自带功能修改包名实现双开"><a href="#2-1-1-使用NP管理器自带功能修改包名实现双开" class="headerlink" title="2.1.1 使用NP管理器自带功能修改包名实现双开"></a>2.1.1 使用NP管理器自带功能修改包名实现双开</h3><p>使用NP管理器提取APK安装包<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image.png width=38%/></p><p>点击apk文件-&gt;功能-&gt;APK共存 输入新包名或者直接使用给出的新包名-&gt;确定-&gt;点击新生成的apk文件-&gt;安装<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-1.png width=38%/><br>注意：因为此双开方式是修改包名实现的，动了应用的签名信息，如果开发者做了签名校验，打开更改过包名的应用会有可能会出现闪退崩溃的情况<br>可以使用开发者助手查看包名与签名的MD5<br>包名：com.zj.wuaipojie<br>签名MD5：A3:1F:3A:26:F7:0B:34:84:F0:7A:8B:A9:42:AA:1E:0D<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-3.png width=38%/><br>包名：com.zj.wuaipojiep<br>签名MD5：68:17:0B:6B:26:E5:23:38:BC:07:AE:66:53:03:CC:36<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-4.png width=38%/></p><h3 id="2-1-2-使用MT管理器手动修改包名实现双开"><a href="#2-1-2-使用MT管理器手动修改包名实现双开" class="headerlink" title="2.1.2 使用MT管理器手动修改包名实现双开"></a>2.1.2 使用MT管理器手动修改包名实现双开</h3><p>点击APK文件-&gt;查看-&gt;点击AndroidMainifest.xml文件-&gt;打开方式 反编译-&gt;修改package的值就是新的包名<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-5.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-6.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-7.png width=38%/><br>MT管理器重新签名后的变化<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-8.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-9.png width=38%/><br>包名：com.zj.wuaipojie.ok<br>签名MD5：E8:9B:15:8E:4B:CF:98:8E:BD:09:EB:83:F5:37:8E:87<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-10.png width=38%/></p><h1 id="3、汉化APK"><a href="#3、汉化APK" class="headerlink" title="3、汉化APK"></a>3、汉化APK</h1><p>汉化：使用专门的工具对外文版的软件资源进行读取、翻译、修改、回写等一系列处理，使软件的菜单、对话框、提示等用户界面显示为中文，而程序的内核和功能保持不变，这个过程即为软件汉化</p><p>基本上字符串都是在arsc里，建议一键汉化，然后再润色。 少量没汉化到的字符串参考视频中的方法定位去逐个汉化。<br>这里还需要注意的是，如果要直装应用，那就应该先签名安装，看看是否有签名校验导致的闪退！！！<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-11.png width=85%/></p><h2 id="3-1、XMl汉化"><a href="#3-1、XMl汉化" class="headerlink" title="3.1、XMl汉化"></a>3.1、XMl汉化</h2><p>打开课件中的Demo，点击挑战-&gt;第一关，先来汉化这一句<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-12.png width=38%/><br>点击APK文件-&gt;查看-&gt;右上的三个点-&gt;XML搜索-&gt;点击搜索到的文件，再点击Jf.xml-&gt;反编译-&gt;修改此处，回编译-&gt;签名，返回到APK文件点击安装，直接安装会提示“安装失败，与已安装APK签名不一致！”，卸载原来的应用，然后再来这里进行安装<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-13.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-14.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-15.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-16.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-17.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-18.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-19.png width=38%/><br>修改后的效果<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-20.png width=38%/></p><h2 id="3-2、Arsc汉化"><a href="#3-2、Arsc汉化" class="headerlink" title="3.2、Arsc汉化"></a>3.2、Arsc汉化</h2><p>汉化这句俄语，使用开发者助手应用进行提取<br>Я не могу поверить, что это работает, почему?<br>查看APK点击右上角三个点-&gt;搜索-&gt;高级搜索-&gt;翻译模式-&gt;找到需要翻译的俄语，修改过后退出（保存退出）*2，签名-&gt;安装<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-21.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-22.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-23.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-24.png width=38%/><br>在我看来，困惑是学习过程的第一阶段，这说明固有知识的局限开始被打破了。你要直面新的信息，这些新的信息会挑战你现有的观念和行为模式。由此产生的焦虑是让你改变的动力，很可能也会开启你的创造力。<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-25.png width=38%/><br>最终效果<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-26.png width=38%/></p><h2 id="3-1、DEX汉化"><a href="#3-1、DEX汉化" class="headerlink" title="3.1、DEX汉化"></a>3.1、DEX汉化</h2><p>先使用开发者助手提取这段话，回到MT管理器查看APK-&gt;右上角三个点 搜索（高级搜索），打开方式 Dex编辑器++ -&gt;搜索，编辑保存，退回 保存 编译dex 签名 安装<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-27.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-28.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-29.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-30.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-31.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-32.png width=38%/><br>最终效果<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-33.png width=38%/></p><h1 id="4、初识AndroidMainfest-xml"><a href="#4、初识AndroidMainfest-xml" class="headerlink" title="4、初识AndroidMainfest.xml"></a>4、初识AndroidMainfest.xml</h1><p>AndroidManifest.xml文件是整个应用程序的信息描述文件，定义了应用程序中包含的Activity,Service,Content provider和BroadcastReceiver组件信息。每个应用程序在根目录下必须包含一个AndroidManifest.xml文件，且文件名不能修改。它描述了package中暴露的组件，他们各自的实现类，各种能被处理的数据和启动位置。</p><table><thead><tr><th>属性</th><th>定义</th></tr></thead><tbody><tr><td>versionCode</td><td>版本号，主要用来更新，例如:12</td></tr><tr><td>versionName</td><td>版本名，给用户看的，例如:1.2</td></tr><tr><td>package</td><td>包名，例如：com.zj.52pj.demo</td></tr><tr><td>uses-permission android:name&#x3D;””</td><td>应用权限，例如：android.permission.INTERNET 代表网络权限</td></tr><tr><td>android:label&#x3D;”@string&#x2F;app_name”</td><td>应用名称</td></tr><tr><td>android:icon&#x3D;”@mipmap&#x2F;ic_launcher”</td><td>应用名称</td></tr><tr><td>android:debuggable&#x3D;”true”</td><td>应用是否开启debug权限</td></tr></tbody></table><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-34.png width=38%/><h1 id="5、修改图标、修改名字-课后小作业"><a href="#5、修改图标、修改名字-课后小作业" class="headerlink" title="5、修改图标、修改名字 + 课后小作业"></a>5、修改图标、修改名字 + 课后小作业</h1><h2 id="5-1、修改图标、应用名字"><a href="#5-1、修改图标、应用名字" class="headerlink" title="5.1、修改图标、应用名字"></a>5.1、修改图标、应用名字</h2><p>adb传入图片-&gt;打开np管理器-&gt;点击APK文件-&gt;功能（通用编辑）-&gt;修改后保存-&gt;这个时候的签名有所变化，变成了np管理器默认的签名，所以需要卸载原来的应用<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-35.png width=80%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-36.png width=38%/><br>最终效果<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-37.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-38.png width=38%/></p><h2 id="5-2、课后小作业-替换第一关挑战中的图片"><a href="#5-2、课后小作业-替换第一关挑战中的图片" class="headerlink" title="5.2、课后小作业-替换第一关挑战中的图片"></a>5.2、课后小作业-替换第一关挑战中的图片</h2><p>res目录存放资源文件，包括图片，字符串等等，所以这个挑战的图片就在res这个目录里，也可使用开发者助手辅助，然后搜索<br>打开APK文件进入res目录，找到需要修改的图片cf.jpg，右边目录找到图片目录，重命名为cf.jpg然后复制过去-&gt;确定（自动）-&gt;安装，这时是MT管理器默认的应用签名<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-39.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-40.png width=38%/><br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-41.png width=38%/><br>最终效果<br><img src=安卓逆向这档事-第二课、初始APK文件结构、双开、汉化、基础修改/image-42.png width=38%/></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初试Frida</title>
    <link href="/2023/11/06/%E5%88%9D%E8%AF%95Frida/"/>
    <url>/2023/11/06/%E5%88%9D%E8%AF%95Frida/</url>
    
    <content type="html"><![CDATA[<p>工具说明：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">Frida<br><span class="hljs-keyword">Android </span>Studio<br><span class="hljs-keyword">jadx-gui</span><br><span class="hljs-keyword"></span>一部测试机（已Root）<br></code></pre></td></tr></table></figure><p>尝试Frida Hook一个简单的Android程序<br>Android Stdio新建一个项目<br><img src="/%E5%88%9D%E8%AF%95Frida/image.png"><br><img src="/%E5%88%9D%E8%AF%95Frida/image-1.png"></p><p><img src="/%E5%88%9D%E8%AF%95Frida/image-2.png"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.MainActivity&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/textView&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;文本框&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">app:layout_constraintBottom_toBottomOf</span>=<span class="hljs-string">&quot;parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">app:layout_constraintEnd_toEndOf</span>=<span class="hljs-string">&quot;parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">app:layout_constraintStart_toStartOf</span>=<span class="hljs-string">&quot;parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">app:layout_constraintTop_toTopOf</span>=<span class="hljs-string">&quot;parent&quot;</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/button&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;按钮&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">tools:ignore</span>=<span class="hljs-string">&quot;MissingConstraints&quot;</span>/&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/%E5%88%9D%E8%AF%95Frida/image-3.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AppCompatActivity</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">View</span>.OnClickListener &#123;<br><br>    <span class="hljs-keyword">private</span> TextView tv;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;<br>        <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>        tv = findViewById(R.id.textView);<br>        findViewById(R.id.button).setOnClickListener(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br><br>    <span class="hljs-meta">@SuppressLint(&quot;SetTextI18n&quot;)</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(View v)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">number1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">number2</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>;<br>        tv.setText(<span class="hljs-string">&quot;value1 + value2 = &quot;</span> + addab(number1, number2));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">addab</span><span class="hljs-params">(<span class="hljs-type">int</span> value1, <span class="hljs-type">int</span> value2)</span>&#123;<br>        <span class="hljs-keyword">return</span> value1 + value2;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>连接PC端运行会自动安装在测试机<br>本地也会输出一个apk文件<br><img src="/%E5%88%9D%E8%AF%95Frida/image-4.png"><br>拖入jadx-gui逆向代码（因为我们直接用源代码，这一步可有可不有）</p><p>入口：com.example.hook_demo.MainActivity<br>双击进入代码<br><img src="/%E5%88%9D%E8%AF%95Frida/image-5.png"><br><img src="/%E5%88%9D%E8%AF%95Frida/image-6.png"><br>点击按钮呈现的效果<br><img src="/%E5%88%9D%E8%AF%95Frida/image-7.png"></p><p>addab函数有value1、value2两个int值，返回value1、value2相加的值<br>按钮被触发之后onClick函数将1、2传入addab函数，addab函数返回相加值<br><img src="/%E5%88%9D%E8%AF%95Frida/image-8.png"></p><p>hook效果：改变返回值，或者改变传入addab函数的值从而改变结果</p><p>第一种改变addab的返回值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Hook 开始！&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">MainActivity</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.example.hook_demo.MainActivity&quot;</span>);<br>    <span class="hljs-title class_">MainActivity</span>.<span class="hljs-property">addab</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;--&quot;</span>, <span class="hljs-string">&quot;返回100&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">100</span>;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>测试机启动Frida-sever<br>frida-ps -Ua查看进程<br>frida -U Hook_Demo -l hook.js</p><p><img src="/%E5%88%9D%E8%AF%95Frida/image-9.png"><br><img src="/%E5%88%9D%E8%AF%95Frida/image-10.png"></p><p>第二种改变a, b的值（刚学习Frida，写的不好的地方还请多多指教）</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs arcade">Java.perform(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;Hook 开始！&quot;</span>);<br>    <span class="hljs-keyword">var</span> MainActivity = Java.use(<span class="hljs-string">&quot;com.example.hook_demo.MainActivity&quot;</span>);<br>    <span class="hljs-comment">// 第一种改变addab的返回值</span><br>    <span class="hljs-comment">// MainActivity.addab.implementation = function(a, b)&#123;</span><br>    <span class="hljs-comment">//     console.log(&quot;--&quot;, &quot;返回100&quot;);</span><br>    <span class="hljs-comment">//     return 100;</span><br>    <span class="hljs-comment">// &#125;</span><br><br>    <span class="hljs-comment">// 第二种改变a, b的值</span><br>    MainActivity.addab.overload(<span class="hljs-string">&quot;int&quot;</span>, <span class="hljs-string">&quot;int&quot;</span>).implementation = <span class="hljs-keyword">function</span>(<span class="hljs-params">value1, value2</span>)&#123;<br>        <span class="hljs-keyword">var</span> result = this.value1 + this.value2;<br>        <span class="hljs-comment">//  改变前的值  1、2</span><br>        <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;改变前的值:&quot;</span>, value1, value2);<br>        value1 = <span class="hljs-number">100</span>, value2 = <span class="hljs-number">200</span>;<br>        <span class="hljs-comment">// 改后后的值   100、200</span><br>        <span class="hljs-built_in">console</span>.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;改后后的值:&quot;</span>, value1, value2,);<br>        <span class="hljs-keyword">return</span> value1 + value2;<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/%E5%88%9D%E8%AF%95Frida/image-11.png"><br><img src="/%E5%88%9D%E8%AF%95Frida/image-12.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
